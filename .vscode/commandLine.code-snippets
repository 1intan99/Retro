{
	// Place your Retro workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "commandLineStandar",
		"body": [
			"import Retro from '../..';",
			"import Command from '../../handlers/command';",
			"import { Message, MessageEmbed, ColorResolvable } from 'discord.js';",
			"import { CmdReturn } from '../../TSConfig';\n",
			"export default class $1 extends Command {",
			"\tpublic constructor(client: Retro) {",
			"\t\tsuper(client, {",
			"\t\t\tname: '$2',",
			"\t\t\taliases: ['$3']",
			"\t\t});",
			"\t}\n",
			"\tpublic async start(message: Message, args: string[]): Promise<CmdReturn | void> {",
			"\t\t",
			"\t}",
			"}"
		],
		"description": "Fast to make command line"
	}
}